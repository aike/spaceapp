{"version":3,"sources":["card.js","detail.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","item","this","idx","className","onClick","sel","bind","title","own","src","img","price","desc","React","Component","Detail","state","buy","console","log","setState","frameborder","allow","allowfullscreen","orgid","part","scale","weight","manufacturer","App","mode","selected","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac805dcc.chunk.js","sourcesContent":["import React from 'react';\n\nclass Card extends React.Component {\n\tconstructor(props) {\n    super(props);\n\t}\n\n\trender() {\n\t\tvar item = this.props.item[this.props.idx];\n\t\treturn (\n        <div className=\"card_item\"  onClick={this.props.sel.bind(this, this.props.idx)} >\n          <div className=\"card_ttl\">{item.title}</div>\n          <div className=\"card_own1\">current owner:</div>\n          <div className=\"card_own2\">{item.own}</div>\n\t        <img className=\"card_img\" src={'images/' + item.img + '.png'} />\n          <div className=\"card_prc\">{item.price}</div>\n          <div className=\"card_desc\">{item.desc}</div>\n          <div className=\"card_btn\">BUY NOW!</div>\n        </div>\n\t\t);\n\t}\n}\n\nexport default Card;","import React from 'react';\n\nclass Detail extends React.Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n    \tbuy: false\n    }\n\t}\n\n  buy() {\n  \tconsole.log('buy');\n  \tthis.setState({buy: true});\n  }\n\n\thandleClick(title) {\n\t\tconsole.log('click => ' + title);\n\t}\n\n\trender() {\n\t\tconsole.log(this.props);\n\t\treturn (\n      <div className=\"detail\" >\n\n\t      <div className=\"det_left\">\n\t        <div className=\"det_ttl\">{this.props.item.title}</div>\n          {this.props.idx === 2 ? \n            <iframe className=\"det_mov\" src=\"https://www.youtube.com/embed/ppToj28jAlM\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> :\n\t          <img className=\"det_img\" src={'images/' + this.props.item.img + '.png'} />}\n\t      </div>\n\n\t      <div className=\"det_right\">\n\t        <div className=\"det_forsale\">FOR SALE!</div>\n\t\t      <div className=\"det_prc\">{this.props.item.price}</div>\n\t        <div className=\"det_dsc\">\n\t        Original ID: {this.props.item.orgid}<br />\n\t        Part: {this.props.item.part}<br />\n\t        Scale: {this.props.item.scale}<br />\n\t        Weight: {this.props.item.weight}<br />\n\t        Manufacturer: {this.props.item.manufacturer}<br />\n\t        Comment: {this.props.item.desc}\n\t        </div>\n\n\n\n\t        <div className=\"det_back\" onClick={this.props.sel.bind(this, -1)}>BACK</div>\n\t        <div className=\"det_btn\" onClick={this.buy.bind(this)}>BUY NOW!</div>\n\t      </div>\n\n\t      {this.state.buy ?\n\t      \t<div className=\"det_congrat\">Congratulations! You are the owner of this debri-land</div> :\n\t      \t<div />}\n\t    </div>\n\t\t);\n\t}\n}\n\nexport default Detail;","import React from 'react';\nimport './App.css';\nimport Card from './card';\nimport Detail from './detail';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'top',\n      selected: 1, \n      item: [\n        {title:'Debri-Land 1', own:'Wang Fu', img:'d01', price:'$199.00', \n          orgid: 'CCSM-804',\n          part: 'Body cover',\n          scale: '3.9 x 2.2 m',\n          weight: '8,510 kg',\n          manufacturer: 'NASA',\n          desc: 'Marked with U.S. Flag'\n        },\n\n        {title:'Debri-Land 2', own:'Marilyn Monroe', img:'d02', price:'$99.00',\n          orgid: 'CCSM-804',\n          part: 'Engine nozzle',\n          scale: '1.9 x 3.0 m',\n          weight: '1,820 kg',\n          manufacturer: 'NASA',\n          desc: ''\n        },\n\n        {title:'Debri-Land 3', own:'Oda Nobunaga', img:'dtori', price:'$299.00', \n          orgid: 'SATM-22',\n          part: 'Heat fin',\n          scale: '0.9 x 1.8 m',\n          weight: '640 kg',\n          manufacturer: 'JAXA',\n          desc: 'Fragile'\n        }\n      ]\n    };\n  }\n\n  sel(item) {\n    if (item < 0) {\n      this.setState({mode:'top', selected:item});\n    } else {\n      this.setState({mode:'detail', selected:item});      \n    }\n  }\n\n  render() {\n    switch (this.state.mode) {\n\n      case 'top':\n        return(\n          <div className=\"App\">\n            <img className=\"logo\" src=\"images/logo2.jpeg\" />\n            <div className=\"servicetitle\">Happy Debriday!</div>\n            <div className=\"card pattern\">\n              <Card idx={0} item={this.state.item} sel={this.sel.bind(this)} />\n              <Card idx={1} item={this.state.item} sel={this.sel.bind(this)} />\n              <Card idx={2} item={this.state.item} sel={this.sel.bind(this)} />\n\n              <Card idx={0} item={this.state.item} sel={this.sel.bind(this)} />\n              <Card idx={1} item={this.state.item} sel={this.sel.bind(this)} />\n              <Card idx={2} item={this.state.item} sel={this.sel.bind(this)} />\n            </div>\n          </div>\n        );\n        break;\n\n      case 'detail':\n        return(<Detail idx={this.state.selected} item={this.state.item[this.state.selected]} sel={this.sel.bind(this)}/>);\n        break;\n\n      default:\n        return(\n          <div className=\"App\">\n            Hello\n          </div>\n        );\n        break;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}